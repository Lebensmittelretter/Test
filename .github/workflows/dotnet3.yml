# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

   steps:
- name: Master Configuration
  if: ${{env.BRANCH_NAME =='master' }}
  run: |
      echo "BUILD_CONFIGURATION=Release" >> $GITHUB_ENV
      echo "VERSION_SUFFIX=" >> $GITHUB_ENV 

- name: Debug Configuration
  if: ${{ env.BRANCH_NAME == 'develop'}}
  run: |
      echo "BUILD_CONFIGURATION=Debug" >> $GITHUB_ENV
      echo "VERSION_SUFFIX=develop.$(date +'%y%m%d%H%M%S')" >> $GITHUB_ENV
  
- name: Get code
  uses: actions/checkout@v3
      
- name: Setup .NET
  uses: actions/setup-dotnet@v3.0.3
  id: cp310
  with:
    dotnet-version: 7.0.*
    
- uses: actions/cache@v3
  with:
    path: ~/.nuget/packages
    # Look to see if there is a cache hit for the corresponding requirements file
    key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
    restore-keys: |
      ${{ runner.os }}-nuget
  
- name: Build Solution
  run: |
    echo '${{ steps.cp310.outputs.dotnet-version }}'
    dotnet build ./WebAppVS.sln --configuration ${{env.BUILD_CONFIGURATION}} -p:CI=true -p:UsePackagePreRelease=${{env.USE_PACKAGE_PRERELEASE}} -p:SourceBuildNumber=${{github.run_number}} -p:SourceRevisionId=${{ github.sha }}
           
- name: Install Unit Test tool
  run: |
    echo 'REPORTS_PATH=./test-reports/build_${{github.run_number}}' >> $GITHUB_ENV
    dotnet tool install -g trx2junit
  
- name: Run Unit Tests
  run: dotnet test --no-build --configuration ${{env.BUILD_CONFIGURATION}} --logger:trx --results-directory:./TestResults
  
- name: Unit Test Post-processing
  run: |
    echo 'export PATH="$PATH:/root/.dotnet/tools"' >> "$GITHUB_ENV"
    trx2junit ./TestResults/*.trx
